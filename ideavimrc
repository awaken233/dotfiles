"leader key 空格不执行任何操作"
nnoremap <SPACE> <Nop>
let mapleader = " "

set hlsearch
set incsearch
set smartcase
set ignorecase
set showmode
set scrolloff=5       "滚动时保持几行可见"
set relativenumber    " 显示从当前行数的前后行数

" Idea specific settings ------------------
set ideajoin      "eg: join comment auto remove // etc."
set ideaput       "default on. enable native IJ paste
set idearefactormode=visual
set visualbell

" plugins
set ideamarks
"set easymotion
set surround
set argtextobj
set multiple-cursors
set multicursor
set highlightedyank
set textobj-entire
"set keep-english-in-normal
set NERDTree
set ReplaceWithRegister
set repeat
set exchange
set quickscope
set vim-paragraph-motion
set matchit
set commentary
set textobj-indent

" handler"
sethandler <C-6> a:vim
sethandler <C-S-6> a:vim
sethandler <C-A> a:vim
sethandler <C-B> a:ide
sethandler <C-D> a:vim
sethandler <C-E> a:vim
sethandler <C-F> a:ide
sethandler <C-G> a:ide
sethandler <C-H> a:vim
sethandler <C-I> a:vim
sethandler <C-J> a:vim
sethandler <C-K> a:vim
sethandler <C-L> a:vim
sethandler <C-N> a:vim
sethandler <C-O> a:vim
sethandler <C-P> a:vim
sethandler <C-R> a:vim
sethandler <C-S> a:vim
sethandler <C-T> a:ide
sethandler <C-V> a:vim
sethandler <C-W> a:vim

" multiple-cursors
map <C-g> <Plug>NextWholeOccurrence
" xmap <C-g> <Plug>NextWholeOccurrence
nmap <C-x> <Plug>SkipOccurrence
xmap <C-x> <Plug>SkipOccurrence
"nmap <C-p> <Plug>RemoveOccurrence
"xmap <C-p> <Plug>RemoveOccurrence
nmap <M-C-g> <Plug>AllWholeOccurrences
xmap <M-C-g> <Plug>AllWholeOccurrences

" clear search highlight
nnoremap <Esc> <Esc>:noh<CR>

" plugin settings
map s <Action>(AceAction)
nmap S ysiw
let g:argtextobj_pairs="(:),{:},<:>,[:]"
let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']



" edit
inoremap <C-d> <Delete>
" Make Y behave the same way as D and C.
nnoremap Y y$
nnoremap vv V
vnoremap p P
" select last change text"
nnoremap gp `[v`]

" clipboard"
vnoremap <leader>y "*y
" 将复制寄存器中的内容放置到粘贴寄存器中"
map <leader>yo :let @+ = @0<CR>

" move
inoremap <C-a> <Esc>I
inoremap <C-e> <End>
" ^$ The symbol is too hard to press
nnoremap <C-a> ^
nnoremap <C-e> $
vnoremap <C-a> ^
vnoremap <C-e> $
vnoremap H ^
vnoremap L $
nnoremap t F

" view
nnoremap gf :action FileStructurePopup<CR>
nnoremap gl :action GotoUrlAction<CR>
nnoremap <leader>e :action SelectInProjectView<CR>
nnoremap <leader>x :action CloseContent<CR>
nnoremap <leader>ha :action HideAllWindows<CR>
nnoremap <leader>lw :action JumpToLastWindow<CR>
nnoremap <leader>cl :action ConsoleView.ClearAll<CR>
nnoremap <leader>a :action GotoAction<CR>
nnoremap <leader>f :action GotoFile<CR>
nnoremap <leader>ss :action GotoSymbol<CR>
nnoremap <leader><space> :action GotoSymbol<CR>
nnoremap q :action ShowIntentionActions<CR>
vnoremap q :action ShowIntentionActions<CR>

" goto/navigate
nnoremap g; :action JumpToLastChange<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gt :action GotoTypeDeclaration<CR>
nnoremap ga :action Annotate<CR>
nnoremap H :action Back<CR>
nnoremap L :action Forward<CR>
" 使用idea的前进后退(vim的前进后退如果开启多个工程,前进后退时文件buffer会串掉)"
nnoremap <C-O> :action Back<CR>
nnoremap <C-I> :action Forward<CR>
nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
nnoremap [e :action GotoPreviousError<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap <leader>se :action ShowErrorDescription<CR>


" refactor
nnoremap R :action RenameElement<CR>
nnoremap <leader>uw :action Unwrap<CR>
nnoremap <leader>im :action ImplementMethods<CR>
nnoremap <leader>om :action OverrideMethods<CR>
inoremap <C-i> :action ImplementMethods<CR>
nnoremap <leader>sw :action SurroundWith<CR>
vnoremap <leader>sw :action SurroundWith<CR>
nnoremap <leader>cs :action ChangeSignature<CR>
nnoremap <leader>sd :action SafeDelete<CR>
nnoremap <A-j> :action MoveStatementDown<CR>
nnoremap <A-k> :action MoveStatementUp<CR>
vnoremap <A-j> :action MoveStatementDown<CR>
vnoremap <A-k> :action MoveStatementUp<CR>

" code
nnoremap == :action ReformatCode<CR>
vnoremap = :action ReformatCode<CR>
nnoremap <leader>cr :action CopyReference<CR>
"mybatis sql log: restore sql"
vnoremap <leader>sq :action ar<CR>

" git"
nnoremap <leader>gb :action Git.Branches<CR>
noremap <leader>go :action Vcs.QuickListPopupAction<CR>
nnoremap <leader>gss :action Git.Stash<CR>
nnoremap <leader>gsu :action Git.Unstash<CR>
nnoremap <leader>glh :action LocalHistory.ShowHistory<CR>
nnoremap <leader>gsh :action Vcs.ShowTabbedFileHistory<CR>

" run
nnoremap <Leader>ru :action Run<CR>
" 重新运行控制台上次执行的程序(如果上一次是jrebel debug运行的, 这一次也会jrebel debug运行)"
nnoremap <Leader>re :action Rerun<CR>
" jrebel debug 工具栏选择的程序"
nnoremap <Leader>rj :action JRebel Debug<CR>
" 在当前上下文 jrebel debug 当前程序"
nnoremap <Leader>rd :action JRebel Debug context-action-does-not-exist<CR>
" 在当前上下文运行. eg: run http, run main, 光标需要定位到运行的位置"
nnoremap <Leader>rr :action RunClass<CR>
nnoremap <Leader>ra :action RunAnything<CR>
nnoremap <Leader>` :action RunAnything<CR>
" jrebel hotswap"
nnoremap <Leader>hs :action Hotswap<CR>

" debug
nnoremap <Leader>dd :action ChooseDebugConfiguration<CR>
nnoremap <Leader>db :action ToggleLineBreakpoint<CR>
" 单步"
nnoremap <Leader>ds :action StepOver<CR>
" resume "
nnoremap <Leader>dr :action Resume<CR>
"Run to Cursor	"
nnoremap <Leader>dc :action RunToCursor<CR>
" Step Out	"
nnoremap <Leader>do :action StepOut<CR>
" Step Into	"
nnoremap <Leader>di :action SmartStepInto<CR>
" 跳转到执行点"
nnoremap <Leader>dg :action ShowExecutionPoint<CR>
nnoremap <Leader>dm :action XDebugger.MuteBreakpoints<CR>
nnoremap <Leader>dp :action Debugger.PopFrame<CR>
nnoremap <Leader>dt :action Debugger.ForceEarlyReturn<CR>
nnoremap <Leader>de :action EvaluateExpression<CR>

" datagrip"
nnoremap <Leader>rt :action DatabaseView.Refresh<CR>

" vim debug"
nnoremap <Leader>vt :action VimFindActionIdAction<CR>
nnoremap <Leader>va :action VimActions<CR>