"leader key 空格不执行任何操作"
nnoremap <SPACE> <Nop>
let mapleader = " "

set hlsearch
set incsearch
set smartcase
set ignorecase
set showmode
set scrolloff=5       "滚动时保持几行可见"
set relativenumber    " 显示从当前行数的前后行数

" Idea specific settings ------------------
set ideajoin      "eg: join comment auto remove // etc."
set ideaput       "default on. enable native IJ paste
set idearefactormode=visual
set visualbell

" plugins
set ideamarks
"set easymotion
set surround
set argtextobj
set multiple-cursors
set multicursor
set highlightedyank
set textobj-entire
set keep-english-in-normal
set NERDTree
set ReplaceWithRegister
set repeat
set exchange
set quickscope
set vim-paragraph-motion
set matchit
set commentary
set textobj-indent

" multiple-cursors
map <C-g> <Plug>NextWholeOccurrence
" xmap <C-g> <Plug>NextWholeOccurrence
nmap <C-x> <Plug>SkipOccurrence
xmap <C-x> <Plug>SkipOccurrence
"nmap <C-p> <Plug>RemoveOccurrence
"xmap <C-p> <Plug>RemoveOccurrence
nmap <M-C-g> <Plug>AllWholeOccurrences
xmap <M-C-g> <Plug>AllWholeOccurrences

" clear search highlight
nnoremap <Esc> <Esc>:noh<CR>

" plugin settings
map s <Action>(AceAction)
nnoremap S ysiw
let g:argtextobj_pairs="(:),{:},<:>"


" edit
inoremap <C-d> <Delete>
" Make Y behave the same way as D and C.
nnoremap Y y$
nnoremap vv V
" select last change text"
nnoremap gp `[v`]

" clipboard"
vnoremap <leader>y "*y
" 将复制寄存器中的内容放置到粘贴寄存器中"
map <leader>yo :let @+ = @0<CR>

" move
inoremap <C-a> <Home>
inoremap <C-e> <End>
" ^$ The symbol is too hard to press
nnoremap <C-a> ^
nnoremap <C-e> $
vnoremap H ^
vnoremap L $
nnoremap t F
vnoremap t F

" view
nnoremap gf :action FileStructurePopup<CR>
nnoremap <leader>e :action SelectInProjectView<CR>
nnoremap <leader>x :action CloseContent<CR>
nnoremap <leader>ha :action HideAllWindows<CR>
nnoremap <leader>lw :action JumpToLastWindow<CR>
nnoremap <leader>cl :action ConsoleView.ClearAll<CR>
nnoremap <leader>a :action GotoAction<CR>
nnoremap <leader>f :action GotoFile<CR>
nnoremap <leader>ss :action GotoSymbol<CR>
nnoremap q :action ShowIntentionActions<CR>


" goto/navigate
nnoremap g; :action JumpToLastChange<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gt :action GotoTypeDeclaration<CR>
nnoremap ga :action Annotate<CR>
nnoremap H :action Back<CR>
nnoremap L :action Forward<CR>
nnoremap [[ :action MethodUp<cr>
nnoremap ]] :action MethodDown<cr>
nnoremap <leader>se :action ShowErrorDescription<CR>


" refactor
nnoremap R :action RenameElement<CR>
nnoremap <leader>uw :action Unwrap<CR>
nnoremap <leader>cs :action ChangeSignature<CR>

" code
nnoremap == :action ReformatCode<CR>
vnoremap = :action ReformatCode<CR>
nnoremap cc :action CommentByLineComment<CR>
vnoremap cc :action CommentByLineComment<CR>

" run and debug
nnoremap <Leader>r :action Run<CR>
nnoremap <Leader>rr :action RunClass<CR>
"nnoremap <Leader>d :<C-u>action ChooseDebugConfiguration<CR>
nnoremap <Leader>ra :action RunAnything<CR>
